version: '3.5'

# source: https://github.com/botleg/swarm-logging/blob/master/docker-stack.yml
# source: https://github.com/bvis/docker-prometheus-swarm/blob/master/docker-compose.logging.yml

# networks:
#   monitor_monitoring:
#     external:
#       name: monitor_monitoring

# NOTE: scope
# source: https://docs.docker.com/engine/extend/plugins_volume/#volumedrivercapabilities
# Supported scopes are global and local.
# Any other value in Scope will be ignored,
# and local is used.
# Scope allows cluster managers to handle the volume in different ways.
# For instance, a scope of global,
# signals to the cluster manager that it only needs to
# create the volume once instead of on each Docker host.
# # More capabilities may be added in the future.
# volumes:
#   esdata:
#     driver: local

docker run -it \
    --rm \
    -p 9200:9200 \
    -p 9300:9300 \
    --memory="600M" \
    --cpus="1.5" \
    --mount type=bind,src=$(pwd)/config/elasticsearch.yml,dst=/usr/share/elasticsearch/config/elasticsearch.yml \
    --mount type=bind,src=$(pwd)/config/elasticsearch.jvm.options,dst=/usr/share/elasticsearch/config/jvm.options \
    --env http.host='0.0.0.0' \
    --env discovery.zen.minimum_master_nodes='1' \
    --env discovery.type='single-node' \
    --env ES_JAVA_OPTS="${ES_JAVA_OPTS}" \
    docker.io/bossjones/elasticsearch:5.6.1 bash

services:
  elasticsearch:
    build:
      context: .
      dockerfile: Dockerfile
    # image: elasticsearch
    image: docker.io/bossjones/elasticsearch:5.6.1
    # image: docker.elastic.co/elasticsearch/elasticsearch:5.6.1
    ports:
      - '9200:9200'
      - '9300:9300'
      # - '18080:18080' # default JMX
      - '9010:9010'
    environment:
      http.host: '0.0.0.0'
      discovery.zen.minimum_master_nodes: '1'
      discovery.type: 'single-node'
      # ES_JAVA_OPTS: "${ES_JAVA_OPTS:--XX:InitialHeapSize=256m -XX:MaxHeapSize=512m -XX:+PrintCommandLineFlags -XX:+PrintGC -XX:+PrintGCCause -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintGCApplicationConcurrentTime -XX:+PrintGCApplicationStoppedTime -XX:+PrintTenuringDistribution -XX:+PrintAdaptiveSizePolicy -XX:+AlwaysPreTouch}"
    #   # Legend
    #   # -Xms = -XX:InitialHeapSize
    #   # -Xmx = -XX:MaxHeapSize)
    #   # -Xmx2g -Xms2g
    #   ES_JAVA_OPTS: '-Xms256m -Xmx256m -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=192.168.60.20'
    #   XPACK_GRAPH_ENABLED: "false"
    #   HTTP_HOST: '0.0.0.0'
    #   DISCOVERY_ZEN_MINIMUM_MASTER_NODES: '1'
    #   DISCOVERY_TYPE: 'single-node'
    #   XPACK_SECURITY_ENABLED: "false"
    #   XPACK_MONITORING_ENABLED: "false"
    #   XPACK_ML_ENABLED: "false"
    #   XPACK_WATCHER_ENABLED: "false"
    #   # ES_JAVA_OPTS: '-Xms256m -Xmx256m'
    #   # NOTE: https://www.elastic.co/products/x-pack
    #   # Security for elasticsearch
    #   # For this demo, we will disable the X-Pack.
    #   # xpack.security.enabled: "false"
    #   # xpack.monitoring.enabled: "false"
    #   # xpack.watcher.enabled: "false"
    #   # cluster.name: "docker-cluster"
    #   # bootstrap.memory_lock: "true"
    #   # VisualVM
    #   # ES_JAVA_OPTS: "-XX:InitialHeapSize=256m -XX:MaxHeapSize=512m -XX:+PrintCommandLineFlags -XX:+PrintGC -XX:+PrintGCCause -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintGCDateStamps -XX:+PrintGCApplicationConcurrentTime -XX:+PrintGCApplicationStoppedTime -XX:+PrintTenuringDistribution -XX:+PrintAdaptiveSizePolicy -XX:+AlwaysPreTouch"
    #   # ES_JAVA_OPTS: "-Xms256M -Xmx256M -Xms512M -Xmx512M -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:-HeapDumpOnOutOfMemoryError -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=18080 -Dcom.sun.management.jmxremote.rmi.port=18080 -Djava.rmi.server.hostname=192.168.60.20 -Dcom.sun.management.jmxremote.local.only=false"
    #   # LS_JAVA_OPTS: "-Xmx256m -Xms256m -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=18080 -Dcom.sun.management.jmxremote.rmi.port=18080 -Djava.rmi.server.hostname=192.168.60.20 -Dcom.sun.management.jmxremote.local.only=false"
    #   # NOTE: https://www.elastic.co/products/x-pack
    #   # Security for elasticsearch
    #   # For this demo, we will disable the X-Pack.
    #   # xpack.security.enabled: "false"
    #   # xpack.monitoring.enabled: "false"
    #   # xpack.graph.enabled: "false"
    #   # xpack.watcher.enabled: "false"
    #   # - ${_SWARM_MANAGER_IP}
    #   # - ${_NODE_1_IP}
    #   # - ${_NODE_2_IP}
    #   # - ${_NODE_3_IP}
    # # volumes:
    # #   - esdata:/usr/share/elasticsearch/data
    # # TODO: Enable this
    # # ulimits:
    # #   memlock:
    # #     soft: -1
    # #     hard: -1
    # #   nofile:
    # #     soft: 65536
    # #     hard: 65536
    # # cap_add:
    # #   - IPC_LOCK
    networks:
      - traefik_proxy
    deploy:
      labels:
      - "traefik.enable=true"
      - "traefik.basic.port=9200"
      - "traefik.backend=elasticsearch"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "traefik.frontend.rule=Host:elasticsearch.scarlettlab.home"
      - "traefik.backend.loadbalancer.swarm=true"
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 60s
      resources:
        limits:
          cpus: '2'
          memory: 600M
        reservations:
          cpus: '0.5'
          memory: 256M
      placement:
        constraints:
          - node.labels.memory == high
          - node.hostname == node4
    configs:
      - source: es-config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
      - source: es-jvm-options
        target: /usr/share/elasticsearch/config/jvm.options
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data:nocopy
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: 4

  elasticsearch-cleaner:
    image: rycus86/elasticsearch-cleaner
    networks:
      - traefik_proxy
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.memory == high
          - node.hostname == node4
      resources:
        limits:
          memory: 16M
    environment:
      - BASE_URL=http://elasticsearch:9200
      - PATTERN=fluentd
      - MAX_INDICES=7
      - INTERVAL=10h
      - TIMEOUT=1m
    logging:
      driver: fluentd
      options:
        tag: app.elasticsearch.cleaner
        fluentd-address: 192.168.60.10:24224
        fluentd-async-connect: 'true'
        fluentd-sub-second-precision: 'true'

  # kibana:
  #   image: registry.scarlettlab.home/private/kibana:6.0.0
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 128M
  #     # TODO /etc/auth-config should change when the routing stack gets updated
  #     labels:
  #       routing-auth-realm: Kibana Logs
  #       routing-auth: /etc/auth-config/kibana.auth.conf
  #       routing-host: logs.scarlettlab.home
  #       routing-port: 5601
  #   networks:
  #     - default
  #     - web
  #   ports:
  #     - 5601:5601
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: 25m
  #       max-file: 4

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:5.6.1
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 128M
  #     # TODO /etc/auth-config should change when the routing stack gets updated
  #     labels:
  #       routing-auth-realm: Kibana Logs
  #       routing-auth: /etc/auth-config/kibana.auth.conf
  #       routing-host: logs.scarlettlab.home
  #       routing-port: 5601
  #   networks:
  #     - default
  #     - web
  #   ports:
  #     - 5601:5601
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: 25m
  #       max-file: 4
  # fluentd:
  #   image: fluentd
  #   deploy:
  #     replicas: 1
  #     resources:
  #       limits:
  #         memory: 96M
  #   configs:
  #     - source: fluent-config
  #       target: /fluentd/etc/fluent.conf
  #   ports:
  #     - 24224:24224
  #     - 24224:24224/udp
  #   environment:
  #     - RUBY_GC_HEAP_OLDOBJECT_LIMIT_FACTOR=0.8
  #   logging:
  #     driver: json-file
  #     options:
  #       max-size: 25m
  #       max-file: 4

configs:
  es-config:
    name: elasticsearch-config-${ELASTICSEARCH_YML}
    file: ./config/elasticsearch.yml
  es-jvm-options:
    name: elasticsearch-jvm-options-${ELASTICSEARCH_JVM_OPTIONS}
    file: ./config/elasticsearch.jvm.options
  fluent-config:
    name: fluent-config-${FLUENT_CONFIG}
    file: ./config/fluent.config

volumes:
  elasticsearch-data:
    driver: local
    driver_opts:
      type: nfs4
      device: :/elasticsearch-data
      o: addr=192.168.60.10,rsize=8192,wsize=8192,timeo=15,hard,intr
networks:
  web:
    external: true
    name: home-web
  docker:
    external: true
    name: home-docker
  traefik_proxy:
    external: true
    driver: overlay
    name: traefik_proxy
