version: '3.5'

x-log-options:
  &log-options
  fluentd-address: 192.168.60.10:24224
  fluentd-async-connect: 'true'
  fluentd-sub-second-precision: 'true'

x-nfs-volume-opts:
  &volume-options
  type: nfs4
  o: addr=192.168.60.10,rsize=8192,wsize=8192,timeo=15,hard,intr

services:
  portainer:
    image: portainer/portainer:1.19.1
    command: -H tcp://tasks.portainer-agent:9001 --tlsskipverify
    networks:
        - traefik_proxy
    deploy:
      placement:
        constraints: [node.role == manager]
      labels:
      # - "traefik.frontend.rule=Host:whoami.scarlettlab.home"
      - "traefik.enable=true"
      - "traefik.basic.port=9000"
      - "traefik.port=9000"
      # - "traefik.basic.protocol=http"
      - "traefik.backend=portainer"
      - "traefik.backend.loadbalancer.stickiness=true"
      - "traefik.frontend.rule=Host:portainer.scarlettlab.home"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.backend.loadbalancer.swarm=true"
      # labels:
      # - "traefik.frontend.rule=PathPrefixStrip:/portainer"
      # - "traefik.backend=portainer"
      # - "traefik.port=9000"
      # - "traefik.weight=10"
      # - "traefik.enable=true"
      # - "traefik.passHostHeader=true"
      # - "traefik.docker.network=traefik_proxy"
      # - "traefik.frontend.entryPoints=http"
      # - "traefik.backend.loadbalancer.swarm=true"
      # - "traefik.backend.loadbalancer.method=drr"
      # # https://github.com/containous/traefik/issues/563#issuecomment-421360934
      # - "traefik.frontend.redirect.regex=^(.*)/portainer$$"
      # - "traefik.frontend.redirect.replacement=$$1/portainer/"
      # - "traefik.frontend.rule=PathPrefix:/portainer;ReplacePathRegex: ^/portainer/(.*) /$$1"
      replicas: 1
      mode: replicated
      resources:
        limits:
          cpus: '0.33'
          memory: 20M
        # reservations:
        #   cpus: '0.05'
        #   memory: 10M
      update_config:
        parallelism: 1
        order: start-first
    ports:
      - "9000:9000"
    volumes:
      # - portainer-data:/data:nocopy
      - /srv/data/docker/containers/portainer/data:/data
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: 4
    # logging:
    #   driver: fluentd
    #   options:
    #     <<: *log-options
    #     tag: app.portainer
    # SOURCE: https://docs.traefik.io/user-guide/examples/

  portainer-agent:
    image: portainer/agent:1.1.1
    networks:
        - traefik_proxy
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]
      resources:
        limits:
          memory: 32M
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.portainer-agent
      AGENT_PORT: 9001
      LOG_LEVEL: debug
    volumes:
      # - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /var/lib/docker/volumes:/var/lib/docker/volumes:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/data/docker/var/volumes/:/var/lib/docker/volumes
    logging:
      driver: json-file
      options:
        max-size: 25m
        max-file: 4
    # logging:
    #   driver: fluentd
    #   options:
    #     <<: *log-options
    #     tag: app.portainer.agent

#   release-watcher:
#     image: rycus86/release-watcher
#     deploy:
#       replicas: 1
#       resources:
#         limits:
#           memory: 32M
#       update_config:
#         parallelism: 1
#         order: start-first
#     configs:
#       - source: release-watcher-app
#         target: /var/conf/release-watcher.yml
#       - source: release-watcher-main
#         target: /var/secrets/release-watcher
#     secrets:
#       - source: release-watcher-github
#         target: /var/secrets/github
#       - source: release-watcher-slack
#         target: /var/secrets/slack
#     volumes:
#       - release-watcher-data:/var/data:nocopy
#     logging:
#       driver: fluentd
#       options:
#         <<: *log-options
#         tag: app.release.watcher

#   github-exporter:
#     image: rycus86/github-exporter
#     command: >
#       -user rycus86
#       -credentials /secret/github.creds
#       -interval 15m
#       -skip-forks
#       -port 8080
#     deploy:
#       replicas: 1
#       resources:
#         limits:
#           memory: 32M
#       update_config:
#         parallelism: 1
#         order: start-first
#       labels:
#         prometheus-job: github-exporter
#         prometheus-port: 8080
#     secrets:
#       - source: github-exporter-creds
#         target: /secret/github.creds
#     logging:
#       driver: fluentd
#       options:
#         <<: *log-options
#         tag: app.github.exporter

#   dockerhub-exporter:
#     image: rycus86/dockerhub-exporter
#     command: >
#       -owner rycus86
#       -interval 1h
#       -port 8080
#     deploy:
#       replicas: 1
#       resources:
#         limits:
#           memory: 32M
#       update_config:
#         parallelism: 1
#         order: start-first
#       labels:
#         prometheus-job: dockerhub-exporter
#         prometheus-port: 8080
#     logging:
#       driver: fluentd
#       options:
#         <<: *log-options
#         tag: app.dockerhub.exporter

# configs:
#   prometheus-template:
#     file: ./config/prometheus.pygen.template.yml
#     name: pygen-prometheus-${PROMETHEUS_PYGEN_TEMPLATE_YML}
#   telegraf-config:
#     file: ./config/telegraf.config
#     name: telegraf-config-${TELEGRAF_CONFIG}
#   release-watcher-app:
#     file: ./config/release-watcher.yml
#     name: release-watcher-app-config-${RELEASE_WATCHER_YML}
#   release-watcher-main:
#     file: ./config/rw_main.config
#     name: release-watcher-main-config-${RW_MAIN_CONFIG}

# secrets:
#   grafana-config:
#     file: ./config/grafana.conf
#     name: grafana-config-${GRAFANA_CONF}
#   release-watcher-github:
#     file: ./config/rw_github.conf
#     name: release-watcher-github-config-${RW_GITHUB_CONF}
#   release-watcher-slack:
#     file: ./config/rw_slack.conf
#     name: release-watcher-slack-config-${RW_SLACK_CONF}
#   github-exporter-creds:
#     file: ./config/github-exporter.conf
#     name: github-exporter-creds-${GITHUB_EXPORTER_CONF}

volumes:
#   prometheus-config:
#     driver: local
#     driver_opts:
#       <<: *volume-options
#       device: :/mnt/shared/prometheus-config

#   prometheus-data:
#     driver: local
#     driver_opts:
#       <<: *volume-options
#       device: :/mnt/shared/prometheus-data

#   grafana-data:
#     driver: local
#     driver_opts:
#       <<: *volume-options
#       type: nfs4
#       device: :/grafana-data

  portainer-data:
    # driver: local
    # driver_opts:
    #   <<: *volume-options
    #   type: nfs4
    #   device: :/portainer-data

#   release-watcher-data:
#     driver: local
#     driver_opts:
#       <<: *volume-options
#       type: nfs4
#       device: :/release-watcher

# networks:
#   web:
#     name: home-web
#     external: true
#   monitoring:
#     name: home-monitoring
#     external: true
#   docker:
#     name: home-docker
#     external: true
#   traefik_proxy:
#     external: true
#     name: traefik_proxy



networks:
  web:
    external: true
    name: home-web
  monitoring:
    name: home-monitoring
    external: true
  docker:
    external: true
    name: home-docker
  traefik_proxy:
    external: true
    driver: overlay
    name: traefik_proxy
